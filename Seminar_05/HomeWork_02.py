# Создайте программу для игры с конфетами человек против человека.
# Условие задачи: На столе лежит 2021 конфета. 
# Играют два игрока делая ход друг после друга. 
# Первый ход определяется жеребьёвкой. 
# За один ход можно забрать не более чем 28 конфет.
# Все конфеты оппонента достаются сделавшему последний ход. 
# Сколько конфет нужно взять первому игроку, чтобы забрать все конфеты у своего конкурента?
# a) Добавьте игру против бота
# b) Подумайте как наделить бота "интеллектом"


import random


# задаем количество конфет
candy = 100

print('Введите 1 если хотите играть против компьютера')
print('Введите 0 если хотите играть против игрока')

# выбираем режим игры
pvpve = input('Введите цифру: ')
print()

# определяем очередность хода
coin = random.randint(0, 1)


# метод для игры против компьютера
def gamePVE(coin, candy):

    take = 0

    # проверка для определения хода
    # если ходит компьтер, то выполнится блок if, а если игрок, то выполнится блок else
    if coin == 1:
        
        take = random.randint(1, 28)

        # даем компьютеру *интеллект*
        if candy <= 28:
            take = candy
        if 29 < candy < 58:
            take = candy - 29
        
        print('Компьютер забрал ', take, ' конфет')

        # уменьшаем количество конфет
        candy -= take

        print('Конфет осталось ', candy)
        print()

        # меняем очередность хода
        coin = 0

        # возвращаем измененное количество конфет и монетку для передачи хода
        return coin, candy
    else:
        print('Ход игрока')
        
        # не даем игроку ввести неправильное количество конфет
        while take < 1 or take > 28:
            take = int(input('Сколько возьмёте конфет: '))

            if take > 28 or take < 1:
                print('Вы можете взять от 1 до 28 конфет')
        
        print('Игрок забрал ', take, ' конфет')

        # уменьшаем количество конфет
        candy -= take

        print('Конфет осталось ', candy)
        print()

        # меняем очередность хода
        coin = 1
        
        # возвращаем измененное количество конфет и монетку для передачи хода
        return coin, candy

# метод для игры против игрока
def gamePVP(coin, candy):

    take = 0

    if coin == 1:
        print('Ход первого игрока')
    else:
        print('Ход второго игрока')
    
    # не даем игроку ввести неправильное количество конфет
    while take < 1 or take > 28:
        take = int(input('Сколько возьмёте конфет: '))

        if take > 28 or take < 1:
            print('Вы можете взять от 1 до 28 конфет')
            print()

    if coin == 1:
        print('Первый игрок забрал ', take, ' конфет')
    else:
        print('Второй игрок забрал ', take, ' конфет')

    # уменьшаем количество конфет
    candy -= take

    print('Конфет осталось ', candy)
    print()

    # меняем очередность хода
    if coin == 0:
        coin = 1
    else:
        coin = 0

    # возвращаем измененное количество конфет и монетку для передачи хода
    return coin, candy

# если игрок ввел 1 то игра начинается против компьютера
if pvpve == '1':
    print('Игра против компьютера')
    print()

    if coin == 1:
        print('Первым ходит компьютер')
        print()
    else:
        print('Первым ходит игрок')
        print()

    # обращаемся к методу игры с компьютером пока есть конфеты
    while candy > 0:
        coin, candy = gamePVE(coin, candy)

    print('Игра окончена')

    # побеждает тот кто забрал последние конфеты
    if coin == 1:
        print('Победил игрок')
    else:
        print('Победил компьютер')

# если игрок ввел не 1 то игра начинается против игрока 
else:
    print('Игра против игрока')
    print()

    if coin == 1:
        print('Первым ходит первый игрок')
        print()
    else:
        print('Первым ходит второй игрок')
        print()

    # обращаемся к методу игры с компьютером пока есть конфеты
    while candy > 0:
        coin, candy = gamePVP(coin, candy)

    # побеждает игрок забравший последние конфеты
    if coin == 1:
        print('Победил второй игрок')
    else:
        print('Победил первый игрок')
