# Измените код одной-двух решенных ранее задач 
# (с прошлых семинаров или домашних работ), 
# применив лямбды, filter, map, zip, enumerate, списочные выражения.

# 1 ПРИМЕР

# Напишите программу, которая принимает на вход цифру, обозначающую день недели, 
# и проверяет, является ли этот день выходным.
# 1 домашняя задача 1 семинар
#------------------ИЗНАЧАЛЬНЫЙ ВИД------------------
# # Создаем список с днями недели
# week = [1, 2, 3, 4, 5, 6, 7]
# # Просим ввести цифру пользователя
# day = int(input("Введите цифру дня недели "))

# # Проверяем есть ли такой день в неделе
# if day in week:
#     # проверяем выходной ли это
#     if day == 6 or day == 7:
#         print("Это выходной день недели")
#     else:
#         print("Это рабочий день недели")
# else:
#     print("Это не день недели")
#------------------ИЗНАЧАЛЬНЫЙ ВИД------------------

#------------------ИЗМЕНЕННЫЙ ВИД------------------
# # заполняем список списочным выражением
# week = [i for i in range(1,8)]

# # определяем день недели с помощью лямбды
# dayOfWeek = lambda x: 'Это рабочий день недели' if x < 6 else "Это выходной день недели"

# # вводим цифру
# number = int(input("Введите цифру дня недели "))

# # выводим ответ
# if number in week:
#     print(dayOfWeek(number))
# else:
#     print("Это не день недели")
#------------------ИЗМЕНЕННЫЙ ВИД------------------






# 2 ПРИМЕР

# Задайте список из n чисел последовательности (1 + (1 / n)) ** n 
# выведите на экран их сумму.
# 3 домашняя задача 2 семинар
#------------------ИЗНАЧАЛЬНЫЙ ВИД------------------
# number = int(input())
# listOfNumbers = list()

# # Цикл для подсчета последовательности чисел от 1 до number
# while number > 0:

#     # Добавляем в список число
#     listOfNumbers.append((1 + 1 / number) ** number)

#     # Уменьшаем полученное число до 0
#     number -= 1

# # Проходимся по всему списку и считаем сумму
# for i in listOfNumbers:
    
#     number += i

# # Выводим на экран
# print(listOfNumbers)
# print(round(number, 2))
#------------------ИЗНАЧАЛЬНЫЙ ВИД------------------

#------------------ИЗМЕНЕННЫЙ ВИД------------------
from functools import reduce

#задаем число
number = int(input())

# составляем список нужной последовательности с помощью списочного выражения
lst = [(1 + (1 / i)) ** i for i in range(1, number + 1)]

print(lst)

# используем reduce для получения суммы всех элементов списка
number = reduce(lambda x, y: x + y, lst)

print(round(number, 2))
#------------------ИЗМЕНЕННЫЙ ВИД------------------
